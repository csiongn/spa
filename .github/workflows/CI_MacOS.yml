name: CI for Cmake Project - MacOS

on:
  push:
    branches:
      - master
      - develop
      - release/milestone-1
  pull_request:
    branches:
      - master
      - develop
      - release/milestone-1
env:
    BUILD_TYPE: Release

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 10
    name: mac cicd
    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install cpplint
        run: pip install cpplint

      - name: Run cpplint
        run: >
          cpplint 
          --verbose=3
          --exclude=./external/
          --exclude=./lib/
          --exclude=./src/autotester
          --exclude=./src/autotester_gui
          --recursive
          --filter=-legal/copyright,-whitespace/tab,-readability/braces,-whitespace/ending_newline,-readability/namespace,-build/header_guard,-build/storage_class,-whitespace/blank_line,-readability/todo
          --extensions=c,h,cpp ./
        working-directory: ${{ github.workspace }}/Team20/Code20/
        continue-on-error: false # Set to false to fail the step if cpplint finds issues

      - name: Create Build Environment
        run: cmake -E make_directory ${{ github.workspace }}/Team20/Code20/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{ github.workspace }}/Team20/Code20/build
        run: cmake $GITHUB_WORKSPACE/Team20/Code20/ -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_STANDARD=17

      - name: Build Project
        working-directory: ${{ github.workspace }}/Team20/Code20/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ${{ github.workspace }}/Team20/Code20/build

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ${{ github.workspace }}/Team20/Code20/build

      - name: Make autotester.sh executable
        working-directory: ${{ github.workspace }}/Team20
        run: chmod +x autotester.sh
      
      - name: Run autotester.sh
        working-directory: ${{ github.workspace }}/Team20
        run: ./autotester.sh -M -R
        shell: bash
        id: autotester
        continue-on-error: true

      - name: Run Unit Testing
        working-directory: ${{ github.workspace }}/Team20/Code20/build/src/unit_testing
        run: ./unit_testing

      - name: Run Integration Testing
        working-directory: ${{ github.workspace }}/Team20/Code20/build/src/integration_testing
        run: ./integration_testing

      - name: Find and upload out.xml files
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            ${{ github.workspace }}/Team20/Tests20/**/out.xml

      - name: Check Test Results
        run: |
          if [ ${{ steps.unit_test.outcome }} != 'success' ] || [ ${{ steps.integration_test.outcome }} != 'success' ]; then
            echo "Unit testing or integration testing failed. Exiting with failure status."
            exit 1
          fi

      - name: Finalize Workflow
        if: ${{ failure() }}
        run: exit 1